name: "Update SPEC 0 dependencies"
description: "Update the lower bounds of Python dependencies covered by the Scientific Python SPEC 0 support schedule"
author: Sam Vente
inputs:
  target_branch:
    description: "Target branch for the pull request"
    required: true
    default: "main"
  project_file_name: 
    description: "Path to the project file listing dependencies, relative to repository root. Defaults to 'pyproject.toml'. Currently only pyproject.toml is supported."
    required: true
    default: "pyproject.toml"
  create_pr: 
    description: "Whether the action should open a PR or not. Set to false for dry-run/testing."
    required: true
    default: true
  commit_msg: 
    description: "Commit message for the commit to update the versions. by default 'Drop support for unsupported packages conform SPEC 0'. has no effect if `create_pr` is set to false"
    required: false
    default: "chore: Drop support for unsupported packages conform SPEC 0"
  pr_title: 
    description: "The title of the PR that will be opened. by default 'Drop support for unsupported packages conform SPEC 0'. has no effect if `create_pr` is set to false"
    required: false
    default: "chore: Drop support for unsupported packages conform SPEC 0"
  schedule_path:
    description: "Path to the schedule.json file relative to the project root. If missing, it will be downloaded from the latest release of savente93/SPEC0-schedule"
    default: "schedule.json"
  token:
    description: "GitHub token with repo permissions to create pull requests"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Git
      shell: bash
      run: |
        git config user.name "GitHub Actions [bot]"
        git config user.email "github-actions-bot@users.noreply.github.com"

    - name: Download schedule artifact
      shell: bash
      env:
        SCHEDULE_FILE: ${{ inputs.schedule_path }}
        GH_TOKEN: ${{ inputs.token }}
      run: |
        set -e
        if [ ! -f "${{ github.workspace }}/$SCHEDULE_FILE" ]; then
          echo "Downloading schedule.json from latest release..."
          gh release download -R "savente93/SPEC0-schedule" --pattern schedule.json -O "${{ github.workspace }}/$SCHEDULE_FILE"
        else
          echo "Schedule file already exists at $SCHEDULE_FILE"
        fi

    - uses: prefix-dev/setup-pixi@v0.8.14
      name: Setup Pixi
      with:
        pixi-version: v0.49.0
        manifest-path: ${{ github.action_path }}/pyproject.toml

    - name: Run update script
      shell: bash
      run: |
        set -e
        echo "Updating ${{inputs.project_file_name}} using schedule ${{inputs.schedule_path}}"
        pixi run --manifest-path ${{ github.action_path }}/pyproject.toml update-dependencies  "${{ github.workspace }}/${{ inputs.project_file_name }}" "${{ github.workspace }}/${{ inputs.schedule_path }}"
        if [ ! "$(git ls-files --error-unmatch ${{ github.workspace }}/${{ inputs.schedule_path }})" ]; then
          # Clean up schedule file so it does not appear in PR but only if it wasn't tracked before
          rm -f "${{ github.workspace }}/${{ inputs.schedule_path }}"
        fi

    - name: Show changes (dry-run)
      if: ${{ inputs.create_pr != 'true' }}
      shell: bash
      run: |
        echo "Dry run: showing changes that would be committed"
        git --no-pager diff

    - name: Create Pull Request
      if: ${{ inputs.create_pr == 'true' }}
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ inputs.token }}
        commit-message: ${{ inputs.commit_msg }}
        title: ${{ inputs.pr_title }}
        body: "This PR was created automatically"
        base: ${{ inputs.target_branch }}
        branch: update-spec0-dependencies-${{ github.run_id }}

branding:
  icon: 'check-square'
  color: 'blue'
